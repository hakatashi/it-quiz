name: Test and Release

on:
  push:
  pull_request:

permissions:
  contents: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up latest Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm --prefix .github install
      - name: Test
        run: npm --prefix .github test

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up latest Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm --prefix .github install
      - id: build
        name: Build
        run: npm --prefix .github exec tsx .github/bin/release.mts
      - name: Test
        run: |
          echo "version: ${{ steps.build.outputs.new_version }}"
          cat release.md
      - name: Push new tag to GitHub
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git push origin ${{ steps.build.outputs.new_version }}
      - name: Release
        uses: softprops/action-gh-release@v2
        if: ${{ steps.build.outputs.new_version != '' }}
        with:
          tag_name: ${{ steps.build.outputs.new_version }}
          body_path: release.md
          files: |
            release/it-quiz-v${{ steps.build.outputs.new_version }}.yaml
            release/it-quiz-v${{ steps.build.outputs.new_version }}.json
            release/news-quiz-v${{ steps.build.outputs.new_version }}.yaml
            release/news-quiz-v${{ steps.build.outputs.new_version }}.json